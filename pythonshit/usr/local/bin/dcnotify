#!/usr/bin/env python3
import requests
import time
import json
import os
import sys
from datetime import datetime
from pyfcm import FCMNotification
import logging



with open('/etc/python-shit/discordnotify.json', 'r') as json_file:
  config = json.load(json_file)

push_service = FCMNotification(
    api_key=config["api_key"])
registration_ids = config["registration_ids"]
headers = {
    'User-Agent': 'Mozilla/51.0 (Windows NT 6.1; WOW64; rv:50.0) Gecko/20100101 Firefox/50.0'}

names = config["names"]
oldStates = {name: False for name in names} # False means offline

while True:
    try:
        dcData = requests.get(
        config["server"]    , headers=headers).text # link is under server settings widgets or similar
        dc = json.loads(dcData)
        on = [x['username'] for x in dc['members']]
        states = {name: name in on for name in names}
        for name in names:
            if states[name] != oldStates[name]: # if online state changed
                try:
                    message_title = '[' + \
                        datetime.now().strftime("%Y-%m-%d_%H-%M-%S")+']'
                    message_body = name
                    message_body += " geht on" if not oldStates[name] else " geht off"
                    result = push_service.notify_multiple_devices(
                        registration_ids=registration_ids, message_title=message_title, message_body=message_body)
                    logging.info('['+datetime.now().strftime("%Y-%m-%d_%H-%M-%S") +
                          '] Online Message gesendet')

                except Exception as e:
                    logging.error('['+datetime.now().strftime("%Y-%m-%d_%H-%M-%S") +
                          '] Online Message failed because of \n'+str(e)+'\n')
                oldStates[name] = states[name]
        time.sleep(250)
    except KeyboardInterrupt:
        exit()

    except Exception as e:
        try:
            message_title = '[' + \
                datetime.now().strftime("%Y-%m-%d_%H-%M-%S")+']'
            message_body = str(e)
            result = push_service.notify_multiple_devices(
                registration_ids=registration_ids, message_title=message_title, message_body=message_body)
            logging.warning('['+datetime.now().strftime("%Y-%m-%d_%H-%M-%S") +
                  '] Fehler Message gesendet für \n'+str(e)+'\n')

        except Exception as e2:
            logging.error('['+datetime.now().strftime("%Y-%m-%d_%H-%M-%S") +
                  '] Fehler Message failed because of \n'+str(e2)+' für \n'+str(e)+'\n')

        time.sleep(600)

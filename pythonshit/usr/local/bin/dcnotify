#!/usr/bin/env python3
import requests
import time
import json
import os
import sys
from datetime import datetime
from pyfcm import FCMNotification
import logging
from systemd.journal import JournalHandler

log = logging.getLogger("dcnotify")
log.addHandler(JournalHandler())
log.setLevel(logging.INFO)

try:
    with open('/etc/python-shit/discordnotify.json', 'r') as json_file:
        config = json.load(json_file)

    push_service = FCMNotification(
        api_key=config["api_key"])
    registration_ids = config["registration_ids"]
    headers = {
        'User-Agent': 'Mozilla/51.0 (Windows NT 6.1; WOW64; rv:50.0) Gecko/20100101 Firefox/50.0'}

    names = config["names"]
    oldStates = {name: False for name in names}  # False means offline
except Exception as e:
    Exception(
        f"Error for Config file locatet at /etc/python-shit/discordnotify.json [{e}]")
    exit()


while True:
    try:
        dcData = requests.get(
            config["server"], headers=headers).text  # link is under server settings widgets or similar
        dc = json.loads(dcData)
        on = [x['username'] for x in dc['members']]
        states = {name: name in on for name in names}
        for name in names:
            if states[name] != oldStates[name]:  # if online state changed
                try:
                    message_title = f'[{datetime.now().strftime("%Y-%m-%d_%H-%M-%S")}]'
                    message_body = f'{name} {"now on" if not oldStates[name] else "now off"}'
                    result = push_service.notify_multiple_devices(
                        registration_ids=registration_ids, message_title=message_title, message_body=message_body)
                    log.info(f'Online Message gesendet [name={name}]')
                    oldStates[name] = states[name]
                except Exception as e:
                    log.error(f'Online Message failed because of [{str(e)}]')
        time.sleep(250)
    except KeyboardInterrupt:
        exit()

    except Exception as e:
        try:
            message_title = f'[{datetime.now().strftime("%Y-%m-%d_%H-%M-%S")}]'
            message_body = str(e)
            result = push_service.notify_multiple_devices(
                registration_ids=registration_ids, message_title=message_title, message_body=message_body)
            log.warning(f'Error Message gesendet f√ºr [{str(e)}]')

        except Exception as e2:
            log.error(
                f'Error Message failed because of [{str(e2)}] for [{str(e)}]')

        time.sleep(600)
